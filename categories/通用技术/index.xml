<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>通用技术 on Jiajun, Shen</title>
    <link>http://localhost:49441/categories/%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 通用技术 on Jiajun, Shen</description>
    <generator>Hugo -- 0.136.2</generator>
    <language>en</language>
    <lastBuildDate>Sat, 19 Oct 2024 16:34:43 +0800</lastBuildDate>
    <atom:link href="http://localhost:49441/categories/%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>复杂系统决策智能</title>
      <link>http://localhost:49441/posts/%E5%A4%8D%E6%9D%82%E7%B3%BB%E7%BB%9F%E5%86%B3%E7%AD%96%E6%99%BA%E8%83%BD/</link>
      <pubDate>Sat, 19 Oct 2024 16:34:43 +0800</pubDate>
      <guid>http://localhost:49441/posts/%E5%A4%8D%E6%9D%82%E7%B3%BB%E7%BB%9F%E5%86%B3%E7%AD%96%E6%99%BA%E8%83%BD/</guid>
      <description>&lt;h3 id=&#34;绪论&#34;&gt;绪论&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;最优化问题
&lt;ul&gt;
&lt;li&gt;分类：变量个数、性质、约束、极值个数、目标个数、线性和非线性、确定/随机/模糊、静态/动态&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;函数优化问题与组合优化问题&lt;/li&gt;
&lt;li&gt;P（多项式时间内判定或解出）、NP（多项式时间内验证）、NPC问题&lt;/li&gt;
&lt;li&gt;计算智能方法
&lt;ul&gt;
&lt;li&gt;逻辑主义、行为主义、联结主义&lt;/li&gt;
&lt;li&gt;神经计算、模糊计算、进化计算（遗传、粒子群）、单点搜索（模拟退火、禁忌搜索）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;神经网络&#34;&gt;神经网络&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;基本特征：神经元及其联结、联结强度决定信号传递强弱、强度可以随着训练改变、信号可以起刺激作用或抑制作用、接收信号的累积效果决定状态、每个神经元有一个阈值&lt;/li&gt;
&lt;li&gt;基本原理：输入层、加权和、阈值函数、输出层&lt;/li&gt;
&lt;li&gt;单层感知器网络、前馈型网络、前馈内层互联网络、循环网（短期记忆特征，稳定，反馈信号引起的变化会减小并消失）、反馈型网络、全互联网络&lt;/li&gt;
&lt;li&gt;学习算法：
&lt;ul&gt;
&lt;li&gt;有监督（实际输出与期望输出的偏差）和无监督（仅仅根据其输入
调整连接权系数和阈值）&lt;/li&gt;
&lt;li&gt;梯度下降算法：一般来说，只能找到一个局部最小点(多解)，收敛速度较慢，算法结构简单
&lt;ul&gt;
&lt;li&gt;最速下降法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BP神经网络：初始化网络权值、向前传播输入、反向误差传播、网络权值调整&lt;/li&gt;
&lt;li&gt;BRF神经网络：
&lt;ul&gt;
&lt;li&gt;求取基函数中心：网络初始化，选取聚类中心，将输入的样本按最近邻分组，计算各个聚类集合的平均值得到新的聚类中心。&lt;/li&gt;
&lt;li&gt;求解方差&lt;/li&gt;
&lt;li&gt;计算隐含层和输出层之间的权值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;卷积神经网络&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;模糊逻辑&#34;&gt;模糊逻辑&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;模糊集合
&lt;ul&gt;
&lt;li&gt;可以部分地属于，对于U上一个元素u， f(u)叫做u对于模糊集的隶属度，也可写作 A(u)&lt;/li&gt;
&lt;li&gt;Zadeh表示法$A=\sum \frac{f_A(u)}{u}|A=\int_u \frac{f_A(u)}{u}$&lt;/li&gt;
&lt;li&gt;序对表示法$A={(u,f_A(u))|u\in U}$&lt;/li&gt;
&lt;li&gt;子集：对任意元素都有$f_A(u)&amp;lt;f_B(u)$则$A$是$B$的子集&lt;/li&gt;
&lt;li&gt;交：取最小，并：取最大，补：用1减&lt;/li&gt;
&lt;li&gt;隶属度函数呈单峰馒头形（(凸模糊集合）&lt;/li&gt;
&lt;li&gt;模糊变量的标称值选择一般取3—9个为宜，通常取奇数 (平衡)——在“零”、“适中”或者“合适”集合的两边语言值通常取对称(如速度适中，一边取“速度高”，一般另一 边取“速度低”，满足对称)。&lt;/li&gt;
&lt;li&gt;隶属度函数要符合人们的语义顺序，避免不恰当的重叠，在相同的论域上使用的具有语义顺序关系的若干标称的模 糊集合，应该合理的排列。下面的排列是错误的。&lt;/li&gt;
&lt;li&gt;模糊统计法：隶属频率=属于A的次数/总次数&lt;/li&gt;
&lt;li&gt;例证法：由已知的有限个隶属函数的值， 来估计论域U上的模糊子集A的隶属函数。&lt;/li&gt;
&lt;li&gt;专家经验法、二元对比排序法&lt;/li&gt;
&lt;li&gt;大概三类图形：
&lt;ul&gt;
&lt;li&gt;左大右小的偏小型下降函数(Z函数&lt;/li&gt;
&lt;li&gt;左小右大的偏大型上升函数(S函数)&lt;/li&gt;
&lt;li&gt;对称型凸函数(II函数)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;模糊关系
&lt;ul&gt;
&lt;li&gt;$U\times V={(u,v)|u\in U,v\in V}, (u,v)\rightarrow{}R(u,v)$&lt;/li&gt;
&lt;li&gt;模糊矩阵&lt;/li&gt;
&lt;li&gt;模糊关系的复合&lt;/li&gt;
&lt;li&gt;极大-极小复合$R_1R_2={[(x,z),\max_y \min[\mu_{R1}(x,y),\mu_{R2}(y,z)]]}$($R_1,R_2$在$X\times Y$和$Y\times Z$)&lt;/li&gt;
&lt;li&gt;极大-乘积复合$R_1R_2={[(x,z),\max_y [\mu_{R1}(x,y)*\mu_{R2}(y,z)]]}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;模糊推理
&lt;ul&gt;
&lt;li&gt;语言变量的取值就是模糊集合。语言算子&lt;/li&gt;
&lt;li&gt;T(年纪)={年轻，不年轻，不很年轻,&amp;hellip;, 中年，不是中年,&amp;hellip;,年老，非常年老,&amp;hellip;, 不年轻也不老,&amp;hellip;.}，其中“年纪”是语言变量。&lt;/li&gt;
&lt;li&gt;(x,T(x),X,G,M)：其中x是语言变量名;T(x)为语言变量x的语言值或语言术语集合;X为语言变量x的论域;G为产生T(x)中术语的句法规则，用于产生语言变量值的;M是赋予每 个语言值A以含义M(A)的语法规则，即隶属度函数。&lt;/li&gt;
&lt;li&gt;模糊推理是通过模糊规则将输入转化为输出的过程。在模糊推理中，小前提没有必要与大前提的前件 一致(A与C不必完全一致)，结论没有必要与大前提的后件一致(B与D不必完全一致)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;遗传算法&#34;&gt;遗传算法&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模式&lt;/strong&gt;：模式指群体中编码的某些位置具有相似结构的染色体集合，模式的阶指模式中具有确定取值的基因个数，模式的定义长度指模式中第一个具有确定取值的基因到最后一个具有确定取值的基因的距离 (把中间的空格当作距离)&lt;/li&gt;
&lt;li&gt;染色体编码：
&lt;ul&gt;
&lt;li&gt;$2^L=\frac{U_{max}-U_{min}}{\delta}+1$，$U=U_{min}+\frac{(U_{max}-U_{min})X}{2^L-1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;群体初始化
&lt;ul&gt;
&lt;li&gt;随机数初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;适应性评价
&lt;ul&gt;
&lt;li&gt;评估函数用于评估各个染色体的适应值，进而区分优劣&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;选择算子
&lt;ul&gt;
&lt;li&gt;轮盘赌方法选择，选中概率与适应度大小成正比$P_i=\frac{F(x_i)}{\sum F(x_i)}$&lt;/li&gt;
&lt;li&gt;选择概率和积累概率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交配算子
&lt;ul&gt;
&lt;li&gt;交配概率$P_c$&lt;/li&gt;
&lt;li&gt;将选择出的种群中的M个个体以随机的方式组成 M/2对配对个体组，交配操作就是在这些配对个体组中的两个个体之间进行&amp;mdash;随机配对&lt;/li&gt;
&lt;li&gt;单点交叉（选一个交叉点，一半交叉）、多点交叉、均匀交叉（对每一个基因位随机交换或不交换）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变异算子
&lt;ul&gt;
&lt;li&gt;变异概率$P_m$&lt;/li&gt;
&lt;li&gt;与个体编码串长度等长的屏蔽字，确定哪些位变异&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;粒子群算法&#34;&gt;粒子群算法&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;初始化，随机初始化速度和位置&lt;/li&gt;
&lt;li&gt;速度位置更新，惯量权重$\omega$，加速系数$c_i$，随机数$r_i$
&lt;ul&gt;
&lt;li&gt;$v_i=\omega v_i +c_1r_1(p_{Best_i}-x_i) +c_2r_2(g_{Best}-x_i)$&lt;/li&gt;
&lt;li&gt;$x_i=x_i+v_i$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;评估粒子的适应度函数值，更新粒子最优位置和全局最优位置&lt;/li&gt;
&lt;li&gt;结束条件：gBest差值小于精度&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;贝叶斯网络&#34;&gt;贝叶斯网络&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;全概率公式、贝叶斯公式&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;贝叶斯网络-1&#34;&gt;贝叶斯网络&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;原因节点：没有连线以他们为终点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;贝叶斯网络的预测&#34;&gt;贝叶斯网络的预测&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;自顶向下的过程&lt;/li&gt;
&lt;li&gt;把证据向量输入到贝叶斯网络B中;&lt;/li&gt;
&lt;li&gt;对于B中的每一个没处理过的结点n，如果它具有发生的事实(证据)，则标记它为已经处理过；否则继续下面的步骤&lt;/li&gt;
&lt;li&gt;如果它的所有父结点中有一个没有处理过，则不处理这个结点(保证自顶向下);否则，继续下面的步骤&lt;/li&gt;
&lt;li&gt;根据结点n的所有父结点的概率以及条件概率或联合条件概 率计算结点n的概率分布，并把结点n标记为已处理&lt;/li&gt;
&lt;li&gt;重复步骤(2)~(4)共m次。此时，结点t的概率分布就是
它的发生/不发生的概率。算法结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;贝叶斯网络诊断&#34;&gt;贝叶斯网络诊断&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;把证据向量输入到贝叶斯网络B中&lt;/li&gt;
&lt;li&gt;对于B中的每一个没处理过的结点n，如果它具有发生的事实(证据)，则标记它为已经处理过；否则继续面的步骤&lt;/li&gt;
&lt;li&gt;如果它的所有子结点中有一个没有处理过，则不处理这个结点(保证自底向上)；否则，继续下面的步骤&lt;/li&gt;
&lt;li&gt;根据节点n所有子结点的概率以及条件概率或联合条件概率，根据条件概率公式，计算结点n的概率分布，并把结点n标记为已处理;&lt;/li&gt;
&lt;li&gt;重复步骤共m次。此时，原因结点t的概率分布就是它的发生/不发生的概率。算法结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;贝叶斯网络训练&#34;&gt;贝叶斯网络训练&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在两个结点之间建立连线时，要防止环的出现，因为贝叶斯网络必须是无环图&lt;/li&gt;
&lt;li&gt;通过历史数据获得贝叶斯网络中各结点的概率以及结点之间条件概率的过程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;static-optimization&#34;&gt;STATIC OPTIMIZATION&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;无约束优化问题
&lt;ul&gt;
&lt;li&gt;$L=\frac{1}{2}u^T Qu+S^T u$=&amp;gt;$u*=-Q^{-1}S$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;等式约束优化
&lt;ul&gt;
&lt;li&gt;方法一：
&lt;ul&gt;
&lt;li&gt;$dL=L_u^T du+L_x^T dx$,$df=f_udu+f_xdx$&lt;/li&gt;
&lt;li&gt;$dL/du=L_u-f_u^Tf_x^{-T}L_x=0$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;方法二：
&lt;ul&gt;
&lt;li&gt;\[ \begin{bmatrix}  dL\df  \end{bmatrix} =\begin{bmatrix}  L_x^T&amp;amp;L_u^T\f_x&amp;amp;f_u  \end{bmatrix}\begin{bmatrix}  dx\du  \end{bmatrix}=0 \]&lt;/li&gt;
&lt;li&gt;\[\begin{bmatrix}  1&amp;amp;\lambda^T  \end{bmatrix} \begin{bmatrix}  L_x^T&amp;amp;L_u^T\f_x&amp;amp;f_u  \end{bmatrix}=0, \quad \frac{\partial L}{\partial f}|_{du=0}-\lambda \]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;方法三：
&lt;ul&gt;
&lt;li&gt;$H(x,u,\lambda)=L(x,u)_\lambda^Tf(x,u)$&lt;/li&gt;
&lt;li&gt;$H_u=H_x=H_\lambda=0$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Effect of Changes in Constraints
&lt;ul&gt;
&lt;li&gt;约束改变$\mathrm{d}f$，则$\mathrm{d}x=f_x^{-1}(I+f_u C)\mathrm{d}f$，$\mathrm{d}u=-(L_{uu}^{f})^{-1}(H_{ux}-f^T_u f^{-T}&lt;em&gt;x H&lt;/em&gt;{xx})f_x^{-1}\mathrm{d}f$&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;约束优化：
&lt;ul&gt;
&lt;li&gt;初始点$u$&lt;/li&gt;
&lt;li&gt;确定$x$: $f(x,u)=0$&lt;/li&gt;
&lt;li&gt;确定乘子$\lambda=-f_x^{-T}L_x$&lt;/li&gt;
&lt;li&gt;确定梯度$H_u=L_u+f_u^T\lambda$&lt;/li&gt;
&lt;li&gt;更新$\Delta u=-\alpha H_u$&lt;/li&gt;
&lt;li&gt;计算$\Delta L=H_u^T \Delta u$，根据要求回第二步。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;动态规划方法&#34;&gt;动态规划方法&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;难点：离散化模型面临维数灾难、HJB 方程一般难以求解、HJB 方程对值函数有可微的要求&lt;/li&gt;
&lt;li&gt;最优性原理：多级决策过程的最优策具有如下性质:不论初始状态和初始决策如何，其余的决策对于由初始决策所形成的状态来说，必定也是一个最优策略。&lt;/li&gt;
&lt;li&gt;动态规划求解最短路径，从终点开始向后求解。&lt;/li&gt;
&lt;li&gt;动态规划求解离散最优控制
&lt;ul&gt;
&lt;li&gt;离散化时间：$t_k\in [t_0+k\Delta t,t_0+(k+1)\Delta t]$&lt;/li&gt;
&lt;li&gt;离散化状态方程$：\dot{x}(t)=f(x(t),u(t),t),x(t_0)=x_0$; $x(k+1)=f_D(x(k),u(k),k)$&lt;/li&gt;
&lt;li&gt;离散化性能指标：$J=h_D(x(N),N)+\sum_{k=0}^{N-1}g_D(x(k),u(k),k)$&lt;/li&gt;
&lt;li&gt;Bellman 方程
&lt;ul&gt;
&lt;li&gt;最优控制下的性能 $V(x_0,k_0)$，Bellman方程是充要条件：$V(x(k),k)=min_{u(k)\in U}{g_D(x(k),u(k),k)+V(x(k+1),k+1) }$, $V(x(N),N)=h_D(x(N),N)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;直接迭代求解&#34;&gt;直接迭代求解&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;从后往前依次求解$u(k)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;遍历离散状态和离散控制空间&#34;&gt;遍历离散状态和离散控制空间&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;将$x(k)$离散化为$x^0,&amp;hellip;,x^{s-1}$，$u(k)=u^0,&amp;hellip;,u^{c-1}$&lt;/li&gt;
&lt;li&gt;$V(x(k), k) = min {g_D(x(k), u(k), k) + V(x(k + 1), k + 1)}$&lt;/li&gt;
&lt;li&gt;查表：直接寻找距离最近的&lt;/li&gt;
&lt;li&gt;插值计算：不直接查表，使用插值近似&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;遍历当前和下时刻离散状态空间&#34;&gt;遍历当前和下时刻离散状态空间&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;每个时刻求解析解，只需要遍历离散化的状态$x(k),x(k+1)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;连续$J(u,x_0,t_0)=h(x(x_f),t_f)+\int_{t_0}^{t_f} g(x(t),u(t),t)\mathrm{d}t$
&lt;ul&gt;
&lt;li&gt;最优控制充要条件HJB方程：$-V_t(x(t),t)=\min H(x(t),u(t),V^T_x(x(t),t),t)$=&amp;gt;$V_t+\min_u{V_x^T \dot{x} +g(x,u,t)     }=0$&lt;/li&gt;
&lt;li&gt;边界条件$V(x(t_f),t_f)=h(x(t_f),t_f)$&lt;/li&gt;
&lt;li&gt;没有终值可以增加一个罚函数项&lt;/li&gt;
&lt;li&gt;值函数不可微的情况：分片考虑依然满足HJB方程，可验证是充分条件.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;自适应动态规划&#34;&gt;自适应动态规划&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;无限域最优控制问题动态规划，无法从终点开始&lt;/li&gt;
&lt;li&gt;自适应动态规划方法由三个网络组成：模型网络、评判网络、执行网络&lt;/li&gt;
&lt;li&gt;$x(k)$-&amp;gt;Action Network-&amp;gt;$u(k)$;&lt;/li&gt;
&lt;li&gt;$u(k),x(k)$-&amp;gt;Model Network-&amp;gt;$x(k+1)$;&lt;/li&gt;
&lt;li&gt;$x(k+1)$-&amp;gt;Critic Network-&amp;gt;$J(x(k+1))$;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
